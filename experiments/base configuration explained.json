{
    "name": "base", # name of the experiment
    "save_models": false, # store models on the drive in folder models?
    "zip_models": false, # also save a zipped version of the models?
    "save_logs": true, # save the logging of loss and performance over all epochs?
    "save_predictions": true, # save the predicted labels in folder predictions?
    "verbatim": false, # print training output and errors on the console? for debugging
    "batchsize": 3, # size of job batches
    "n_processes": 2, # number of training runs executed in parallel. Mind that pytorch parallelizes as well
	"overwrite": true, # overwrite already existing runs if they are detected in the results folder or not?
    "split_percentages": [ # these are the shares of the different splits
        {
            "train": 0.04,
            "val": 0.01,
            "test": 0.95
        },
        {
            "train": 0.08,
            "val": 0.02,
            "test": 0.9
        },
        {
            "train": 0.16,
            "val": 0.04,
            "test": 0.8
        }
    ],
    "permutations": [ # ids of the permutations to use
        1,
        2,
        3,
        4
    ],
    "repetitions": 2, # how often to train with each permutation
    "learning_rates": [ # the different learning rates
        0.005,
        0.01,
        0.02
    ],
    "weight_decays": [ # the weight decay
        0,
        0.01
    ],
    "loss_functions": [ # the different loss functions (negatvive log likelihood and permutation-invariant loss approximations)
        {
            "func_type": "nll",
            "nclasses": "all"
        },
        {
            "func_type": "inv",
            "nclasses": 6
        },
        {
            "func_type": "inv",
            "nclasses": 7
        }
    ],
    "nets": [ # here the nets and their hyperparameters are defined
        {
            "type": "GCN_Net",
            "early_stopping": {
                "min": 3,
                "wait": 5
            },
            "features": [
                "node_id",
                "keywords"
            ],
            "structure": {
                "hidden_size": [
                    50,
                    100
                ],
                "hidden_layers": [
                    1,
                    2
                ]
            },
            "tricks": {
                "dropout": [
                    0,
                    0.2,
                    0.4
                ],
                "batchnorm": [
                    false,
                    true
                ]
            }
        },
        {
            "type": "GAT_Net_fast",
            "early_stopping": {
                "min": 3,
                "wait": 5
            },
            "features": [
                "node_id",
                "keywords"
            ],
            "structure": {
                "hidden_size": [
                    50,
                    100
                ],
                "hidden_layers": [
                    2,
                    3
                ],
                "num_heads": [
                    1,
                    2
                ]
            },
            "tricks": {
                "dropout": [
                    0,
                    0.2,
                    0.4
                ],
                "batchnorm": [
                    false,
                    true
                ],
                "residual": [
                    false,
                    true
                ]
            }
        },
        {
            "type": "LGNN_Net",
            "early_stopping": {
                "min": 3,
                "wait": 5
            },
            "features": [
                "node_degree",
                "keywords"
            ],
            "structure": {
                "hidden_size": [
                    50,
                    100
                ],
                "hidden_layers": [
                    1,
                    2
                ]
            },
            "tricks": {
                "dropout": [
                    0,
                    0.2,
                    0.4
                ],
                "batchnorm": [
                    false,
                    true
                ],
                "radius": [
                    1,
                    2,
                    3
                ]
            }
        }
    ]
}